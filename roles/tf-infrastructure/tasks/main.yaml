---
- name: Get DNS Zone response
  uri:
    url: "https://dns.hetzner.com/api/v1/zones?name={{ dns_zone_name }}"
    method: GET
    return_content: yes
    body_format: json
    headers:
      Auth-API-Token: "{{ hetzner_dns_token }}"
  register: dns_api_response
  until: dns_api_response.status == 200
  when: dns_enabled

- name: Get DNS Zone ID
  set_fact:
    dns_zone_id: "{{ dns_api_response.json.zones[0].id if dns_enabled == 'true' else 0 }}"

- name: Create Cloud Config for Terraform
  template:
    src: cloud-config.yaml.j2
    dest: "{{ playbook_dir }}/roles/tf-infrastructure/terraform/user-data/cloud-config.yaml"

- name: Create Infrastructure with Terraform
  terraform:
    project_path: "{{ playbook_dir }}/roles/tf-infrastructure/terraform"
    force_init: true
    state: present
    variables:
      hcloud_token: "{{ hetzner_token }}"
      datacenter: "{{ datacenter }}"
      master_servertype: "{{ master_servertype }}"
      worker1_servertype: "{{ worker1_servertype }}"
      worker2_servertype: "{{ worker2_servertype }}"
      worker3_servertype: "{{ worker3_servertype }}"
      worker4_servertype: "{{ worker4_servertype }}"
      lb_enabled: "{{ lb_enabled }}"
      lb_datacenter: "{{ lb_datacenter }}"
      lb_type: "{{ lb_type }}"
      worker1_count: "{{ worker1_count }}"
      worker2_count: "{{ worker2_count }}"
      worker3_count: "{{ worker3_count }}"
      worker4_count: "{{ worker4_count }}"
      domain: "{{ domain }}"
      vswitch_enabled: "{{ vswitch_enabled }}"
      vswitch_id: "{{ vswitch_id }}"
      dns_enabled: "{{ dns_enabled }}"
      dns_zone_id: "{{ dns_zone_id }}"
      hetzner_dns_token: "{{ hetzner_dns_token }}"
      dns_lb_a: "{{ dns_lb_a }}"
  register: tf

- name: Create Infrastructure File
  template:
    src: outputs.yaml.j2
    dest: "{{ playbook_dir }}/env/inventory"

- name: Set Output Info to env/ips.yaml
  template:
    src: ips.yaml.j2
    dest: "{{ playbook_dir }}/env/ips.yaml"
